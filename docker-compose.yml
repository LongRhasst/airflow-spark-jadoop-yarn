services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    env_file:
      - ./.env
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - airflow
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  
  airflow-init:
    image: my_airflow:1.0.0
    container_name: init
    depends_on:
      mysql:
        condition: service_healthy
    restart: on-failure
    env_file:
      - ./.env
    entrypoint: 
      - bash
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com \
          --password admin
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
      - ./include:/opt/airflow/include
      - ./data:/opt/airflow/data
    networks:
      - airflow
    
  webserver:
    image: my_airflow:1.0.0
    container_name: webserver
    depends_on:
      mysql:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - ./.env
    environment:
      - SPARK_HOME=/home/airflow/.local/lib/python3.10/site-packages/pyspark
    command: airflow webserver
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
      - ./include:/opt/airflow/include
      - ./data:/opt/airflow/data
    networks:
      - airflow

  scheduler:
    image: my_airflow:1.0.0
    container_name: scheduler
    depends_on:
      mysql:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    env_file:
      - ./.env
    environment:
      - SPARK_HOME=/home/airflow/.local/lib/python3.10/site-packages/pyspark
    command: airflow scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
      - ./include:/opt/airflow/include
      - ./data:/opt/airflow/data
    networks:
      - airflow
  
volumes:
  mysql_data:
    driver: local

networks:
  airflow:
    driver: bridge